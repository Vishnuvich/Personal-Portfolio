import Head from 'next/head'
import Layout from './layout'
import Experience from '../components/Experience'
import Hero from '../components/Hero'
import About from '../components/About'
import Projects from '../components/Projects'
import Contact from '../components/Contact'
import { useCallback } from 'react'
import Particles from "react-tsparticles";
import { loadFull } from "tsparticles";
import { particleOptions } from '../utils/Particle'
import { getDataFromSanity } from '../sanity/sanity-utils'
import { GetStaticProps } from 'next'
import { AboutData, ExperienceData, HeroData, ProjectData } from '../utils/types'

type Props = {
  heroData: HeroData,
  aboutData: AboutData,
  experienceData: ExperienceData[],
  projectData: ProjectData[]
}


export default function Home({darkMode, heroData, aboutData, experienceData, projectData}) {

  return (
    <div className="dark">
      <Head>
        <title>Vishnu Surendran</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {/* <Particles className='z-0' id="tsparticles" init={particlesInit} loaded={particlesLoaded}  options= {particleOptions} /> */}
        <div className='lg:mx-auto lg:max-w-6xl relative'>
          {/* Hero Section */}
          <Hero heroData={heroData}/>
          {/* About Section */}
          <About aboutData={aboutData} />
          {/* Experience Section */}
          <Experience experienceData={experienceData} />
          {/* Projects */}
          <Projects projectData={projectData} />
          {/* Get in touch */}
          <Contact/>
        </div>
      </Layout>
    </div>
  )
}

export const getStaticProps: GetStaticProps<Props> = async () => {
  const heroData: HeroData = await getDataFromSanity('Hero', false);
  const aboutData: AboutData = await getDataFromSanity('About', false);
  const skillsArr = splitSkillArr(aboutData[0]);
  aboutData[0].skillsArr = skillsArr;
  const experienceData: ExperienceData[] = await getDataFromSanity('Experience', false);
  const projectData: ProjectData[] = await getDataFromSanity('Projects', true);
  return {
    props: {
      heroData: heroData[0],
      aboutData: aboutData[0],
      experienceData,
      projectData,
    },
    // Revalidate static data each 1 day
    revalidate: (60 * 60 * 24),
  }
}

export const splitSkillArr = (arr) => {
  return arr.skills?.reduce((acc, curr, i) => {
    if (!(i%3)) {
      acc.push(arr.skills.slice(i, i+3));
    }
    return acc;
  }, []);
}
