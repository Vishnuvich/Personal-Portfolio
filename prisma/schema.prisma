// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Hero {
  id                String   @id @default(cuid())
  title             String
  designation       String
  organization      String
  companyUrl        String
  content           String
  resume            String?
  headerDescription String
  avatarImage       String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model About {
  id           String   @id @default(cuid())
  aboutContent String
  skills       Skills[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Experience {
  id           String   @id @default(cuid())
  companyName  String
  companyUrl   String
  location     String
  position     String
  startDate    DateTime
  endDate      DateTime
  present      Boolean
  description  String
  technologies Skills[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Project {
  id           String   @id @default(cuid())
  title        String
  slug         String
  category     String
  image        String?
  description  String
  technologies Skills[]
  githubUrl    String?
  liveUrl      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Skills {
  id           String      @id @default(cuid())
  name         String
  description  String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  About        About?      @relation(fields: [aboutId], references: [id])
  aboutId      String?
  Experience   Experience? @relation(fields: [experienceId], references: [id])
  experienceId String?
  Project      Project?    @relation(fields: [projectId], references: [id])
  projectId    String?
}
